{"ast":null,"code":"var _jsxFileName = \"/Users/ggopinathpatro/Downloads/HMCReactive/carbon-react/carbon-react/src/components/datatables/HMCTable.js\";\nimport React from 'react';\nimport { Button, DataTable } from 'carbon-components-react';\nconst {\n  Table,\n  TableRow,\n  TableHead,\n  TableContainer,\n  TableHeader,\n  TableBody,\n  TableCell\n} = DataTable;\n\nfunction HMCTable() {\n  const rows = [{\n    id: 'a',\n    foo: 'Foo a',\n    bar: 'Bar a',\n    baz: 'Baz a'\n  }, {\n    id: 'b',\n    foo: 'Foo b',\n    bar: 'Bar b',\n    baz: 'Baz b'\n  }, {\n    id: 'c',\n    foo: 'Foo c',\n    bar: 'Bar c',\n    baz: 'Baz c'\n  }]; // We would have a headers array like the following\n\n  const headers = [{\n    // `key` is the name of the field on the row object itself for the header\n    key: 'foo',\n    // `header` will be the name you want rendered in the Table Header\n    header: 'Foo'\n  }, {\n    key: 'bar',\n    header: 'Bar'\n  }, {\n    key: 'baz',\n    header: 'Baz'\n  }];\n  return /*#__PURE__*/React.createElement(DataTable, {\n    rows: rows,\n    headers: headers,\n    render: ({\n      rows,\n      headers,\n      getHeaderProps\n    }) => /*#__PURE__*/React.createElement(TableContainer, {\n      title: \"DataTable\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Table, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(TableHead, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(TableRow, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 15\n      }\n    }, headers.map(header => /*#__PURE__*/React.createElement(TableHeader, Object.assign({\n      key: header.key\n    }, getHeaderProps({\n      header\n    }), {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 19\n      }\n    }), header.header)))), /*#__PURE__*/React.createElement(TableBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 13\n      }\n    }, rows.map(row => /*#__PURE__*/React.createElement(TableRow, {\n      key: row.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }\n    }, row.cells.map(cell => /*#__PURE__*/React.createElement(TableCell, {\n      key: cell.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 21\n      }\n    }, cell.value))))))),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 5\n    }\n  });\n}\n\nexport default hmctable;","map":{"version":3,"sources":["/Users/ggopinathpatro/Downloads/HMCReactive/carbon-react/carbon-react/src/components/datatables/HMCTable.js"],"names":["React","Button","DataTable","Table","TableRow","TableHead","TableContainer","TableHeader","TableBody","TableCell","HMCTable","rows","id","foo","bar","baz","headers","key","header","getHeaderProps","map","row","cells","cell","value","hmctable"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,EAAiBC,SAAjB,QAAkC,yBAAlC;AAEA,MAAM;AAAEC,EAAAA,KAAF;AAAQC,EAAAA,QAAR;AAAkBC,EAAAA,SAAlB;AAA6BC,EAAAA,cAA7B;AAA6CC,EAAAA,WAA7C;AAA0DC,EAAAA,SAA1D;AAAqEC,EAAAA;AAArE,IAAmFP,SAAzF;;AACA,SAASQ,QAAT,GAAoB;AAClB,QAAMC,IAAI,GAAG,CACX;AACEC,IAAAA,EAAE,EAAE,GADN;AAEEC,IAAAA,GAAG,EAAE,OAFP;AAGEC,IAAAA,GAAG,EAAE,OAHP;AAIEC,IAAAA,GAAG,EAAE;AAJP,GADW,EAOX;AACEH,IAAAA,EAAE,EAAE,GADN;AAEEC,IAAAA,GAAG,EAAE,OAFP;AAGEC,IAAAA,GAAG,EAAE,OAHP;AAIEC,IAAAA,GAAG,EAAE;AAJP,GAPW,EAaX;AACEH,IAAAA,EAAE,EAAE,GADN;AAEEC,IAAAA,GAAG,EAAE,OAFP;AAGEC,IAAAA,GAAG,EAAE,OAHP;AAIEC,IAAAA,GAAG,EAAE;AAJP,GAbW,CAAb,CADkB,CAsBlB;;AACA,QAAMC,OAAO,GAAG,CACd;AACE;AACAC,IAAAA,GAAG,EAAE,KAFP;AAGE;AACAC,IAAAA,MAAM,EAAE;AAJV,GADc,EAOd;AACED,IAAAA,GAAG,EAAE,KADP;AAEEC,IAAAA,MAAM,EAAE;AAFV,GAPc,EAWd;AACED,IAAAA,GAAG,EAAE,KADP;AAEEC,IAAAA,MAAM,EAAE;AAFV,GAXc,CAAhB;AAgBA,sBACE,oBAAC,SAAD;AACE,IAAA,IAAI,EAAEP,IADR;AAEE,IAAA,OAAO,EAAEK,OAFX;AAGE,IAAA,MAAM,EAAE,CAAC;AAAEL,MAAAA,IAAF;AAAQK,MAAAA,OAAR;AAAiBG,MAAAA;AAAjB,KAAD,kBACN,oBAAC,cAAD;AAAgB,MAAA,KAAK,EAAC,WAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGH,OAAO,CAACI,GAAR,CAAaF,MAAD,iBACX,oBAAC,WAAD;AAAa,MAAA,GAAG,EAAEA,MAAM,CAACD;AAAzB,OAAkCE,cAAc,CAAC;AAAED,MAAAA;AAAF,KAAD,CAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QACGA,MAAM,CAACA,MADV,CADD,CADH,CADF,CADF,eAUE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGP,IAAI,CAACS,GAAL,CAAUC,GAAD,iBACR,oBAAC,QAAD;AAAU,MAAA,GAAG,EAAEA,GAAG,CAACT,EAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGS,GAAG,CAACC,KAAJ,CAAUF,GAAV,CAAeG,IAAD,iBACb,oBAAC,SAAD;AAAW,MAAA,GAAG,EAAEA,IAAI,CAACX,EAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA0BW,IAAI,CAACC,KAA/B,CADD,CADH,CADD,CADH,CAVF,CADF,CAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF;AA8BD;;AAED,eAAeC,QAAf","sourcesContent":["import React from 'react';\nimport { Button, DataTable } from 'carbon-components-react';\n\nconst { Table,TableRow, TableHead, TableContainer, TableHeader, TableBody, TableCell } = DataTable;\nfunction HMCTable() {\n  const rows = [\n    {\n      id: 'a',\n      foo: 'Foo a',\n      bar: 'Bar a',\n      baz: 'Baz a',\n    },\n    {\n      id: 'b',\n      foo: 'Foo b',\n      bar: 'Bar b',\n      baz: 'Baz b',\n    },\n    {\n      id: 'c',\n      foo: 'Foo c',\n      bar: 'Bar c',\n      baz: 'Baz c',\n    },\n  ];\n\n  // We would have a headers array like the following\n  const headers = [\n    {\n      // `key` is the name of the field on the row object itself for the header\n      key: 'foo',\n      // `header` will be the name you want rendered in the Table Header\n      header: 'Foo',\n    },\n    {\n      key: 'bar',\n      header: 'Bar',\n    },\n    {\n      key: 'baz',\n      header: 'Baz',\n    },\n  ];\n  return (\n    <DataTable\n      rows={rows}\n      headers={headers}\n      render={({ rows, headers, getHeaderProps }) => (\n        <TableContainer title=\"DataTable\">\n          <Table>\n            <TableHead>\n              <TableRow>\n                {headers.map((header) => (\n                  <TableHeader key={header.key} {...getHeaderProps({ header })}>\n                    {header.header}\n                  </TableHeader>\n                ))}\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {rows.map((row) => (\n                <TableRow key={row.id}>\n                  {row.cells.map((cell) => (\n                    <TableCell key={cell.id}>{cell.value}</TableCell>\n                  ))}\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </TableContainer>\n      )}\n    />\n  );\n}\n\nexport default hmctable;\n"]},"metadata":{},"sourceType":"module"}