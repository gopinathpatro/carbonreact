{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _sorting = require(\"./sorting\");\n\nvar _normalize2 = _interopRequireDefault(require(\"../tools/normalize\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n/**\n * Copyright IBM Corp. 2016, 2018\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n/**\n * Helper to derive the next state from the given props and the\n * prevState. Potential future-facing API hook for React v17.\n *\n * Currently, it's being used as a way to normalize the incoming data that we\n * are receiving for rows\n */\n\n\nvar getDerivedStateFromProps = function getDerivedStateFromProps(props, prevState) {\n  var _normalize = (0, _normalize2.default)(props.rows, props.headers, prevState),\n      rowIds = _normalize.rowIds,\n      rowsById = _normalize.rowsById,\n      cellsById = _normalize.cellsById;\n\n  var state = {\n    rowIds: rowIds,\n    rowsById: rowsById,\n    cellsById: cellsById,\n    sortDirection: prevState.sortDirection || _sorting.initialSortState,\n    sortHeaderKey: prevState.sortHeaderKey || null,\n    // Copy over rowIds so the reference doesn't mutate the stored\n    // `initialRowOrder`\n    initialRowOrder: rowIds.slice(),\n    filterInputValue: prevState.filterInputValue || null,\n    // Optional state field to indicate whether a consumer should show a\n    // batch actions menu\n    shouldShowBatchActions: prevState.shouldShowBatchActions || false\n  };\n\n  if (prevState.sortDirection && prevState.sortHeaderKey) {\n    var _getSortedState = (0, _sorting.getSortedState)(props, state, prevState.sortHeaderKey, prevState.sortDirection),\n        _rowIds = _getSortedState.rowIds;\n\n    state.rowIds = _rowIds;\n  }\n\n  return state;\n};\n\nvar _default = getDerivedStateFromProps;\nexports.default = _default;","map":{"version":3,"sources":["/Users/ggopinathpatro/Downloads/HMCReactive/carbon-react/carbon-react/node_modules/carbon-components-react/lib/components/DataTable/state/getDerivedStateFromProps.js"],"names":["Object","defineProperty","exports","value","default","_sorting","require","_normalize2","_interopRequireDefault","obj","__esModule","getDerivedStateFromProps","props","prevState","_normalize","rows","headers","rowIds","rowsById","cellsById","state","sortDirection","initialSortState","sortHeaderKey","initialRowOrder","slice","filterInputValue","shouldShowBatchActions","_getSortedState","getSortedState","_rowIds","_default"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,OAAR,GAAkB,KAAK,CAAvB;;AAEA,IAAIC,QAAQ,GAAGC,OAAO,CAAC,WAAD,CAAtB;;AAEA,IAAIC,WAAW,GAAGC,sBAAsB,CAACF,OAAO,CAAC,oBAAD,CAAR,CAAxC;;AAEA,SAASE,sBAAT,CAAgCC,GAAhC,EAAqC;AAAE,SAAOA,GAAG,IAAIA,GAAG,CAACC,UAAX,GAAwBD,GAAxB,GAA8B;AAAEL,IAAAA,OAAO,EAAEK;AAAX,GAArC;AAAwD;AAE/F;;;;;;;AAOA;;;;;;;;;AAOA,IAAIE,wBAAwB,GAAG,SAASA,wBAAT,CAAkCC,KAAlC,EAAyCC,SAAzC,EAAoD;AACjF,MAAIC,UAAU,GAAG,CAAC,GAAGP,WAAW,CAACH,OAAhB,EAAyBQ,KAAK,CAACG,IAA/B,EAAqCH,KAAK,CAACI,OAA3C,EAAoDH,SAApD,CAAjB;AAAA,MACII,MAAM,GAAGH,UAAU,CAACG,MADxB;AAAA,MAEIC,QAAQ,GAAGJ,UAAU,CAACI,QAF1B;AAAA,MAGIC,SAAS,GAAGL,UAAU,CAACK,SAH3B;;AAKA,MAAIC,KAAK,GAAG;AACVH,IAAAA,MAAM,EAAEA,MADE;AAEVC,IAAAA,QAAQ,EAAEA,QAFA;AAGVC,IAAAA,SAAS,EAAEA,SAHD;AAIVE,IAAAA,aAAa,EAAER,SAAS,CAACQ,aAAV,IAA2BhB,QAAQ,CAACiB,gBAJzC;AAKVC,IAAAA,aAAa,EAAEV,SAAS,CAACU,aAAV,IAA2B,IALhC;AAMV;AACA;AACAC,IAAAA,eAAe,EAAEP,MAAM,CAACQ,KAAP,EARP;AASVC,IAAAA,gBAAgB,EAAEb,SAAS,CAACa,gBAAV,IAA8B,IATtC;AAUV;AACA;AACAC,IAAAA,sBAAsB,EAAEd,SAAS,CAACc,sBAAV,IAAoC;AAZlD,GAAZ;;AAeA,MAAId,SAAS,CAACQ,aAAV,IAA2BR,SAAS,CAACU,aAAzC,EAAwD;AACtD,QAAIK,eAAe,GAAG,CAAC,GAAGvB,QAAQ,CAACwB,cAAb,EAA6BjB,KAA7B,EAAoCQ,KAApC,EAA2CP,SAAS,CAACU,aAArD,EAAoEV,SAAS,CAACQ,aAA9E,CAAtB;AAAA,QACIS,OAAO,GAAGF,eAAe,CAACX,MAD9B;;AAGAG,IAAAA,KAAK,CAACH,MAAN,GAAea,OAAf;AACD;;AAED,SAAOV,KAAP;AACD,CA7BD;;AA+BA,IAAIW,QAAQ,GAAGpB,wBAAf;AACAT,OAAO,CAACE,OAAR,GAAkB2B,QAAlB","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _sorting = require(\"./sorting\");\n\nvar _normalize2 = _interopRequireDefault(require(\"../tools/normalize\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Copyright IBM Corp. 2016, 2018\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n/**\n * Helper to derive the next state from the given props and the\n * prevState. Potential future-facing API hook for React v17.\n *\n * Currently, it's being used as a way to normalize the incoming data that we\n * are receiving for rows\n */\nvar getDerivedStateFromProps = function getDerivedStateFromProps(props, prevState) {\n  var _normalize = (0, _normalize2.default)(props.rows, props.headers, prevState),\n      rowIds = _normalize.rowIds,\n      rowsById = _normalize.rowsById,\n      cellsById = _normalize.cellsById;\n\n  var state = {\n    rowIds: rowIds,\n    rowsById: rowsById,\n    cellsById: cellsById,\n    sortDirection: prevState.sortDirection || _sorting.initialSortState,\n    sortHeaderKey: prevState.sortHeaderKey || null,\n    // Copy over rowIds so the reference doesn't mutate the stored\n    // `initialRowOrder`\n    initialRowOrder: rowIds.slice(),\n    filterInputValue: prevState.filterInputValue || null,\n    // Optional state field to indicate whether a consumer should show a\n    // batch actions menu\n    shouldShowBatchActions: prevState.shouldShowBatchActions || false\n  };\n\n  if (prevState.sortDirection && prevState.sortHeaderKey) {\n    var _getSortedState = (0, _sorting.getSortedState)(props, state, prevState.sortHeaderKey, prevState.sortDirection),\n        _rowIds = _getSortedState.rowIds;\n\n    state.rowIds = _rowIds;\n  }\n\n  return state;\n};\n\nvar _default = getDerivedStateFromProps;\nexports.default = _default;"]},"metadata":{},"sourceType":"script"}