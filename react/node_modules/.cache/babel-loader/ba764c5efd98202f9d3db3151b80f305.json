{"ast":null,"code":"var _jsxFileName = \"/Users/ggopinathpatro/carbonreact/carbonreact/react/src/components/datatables/CustomTable.js\";\nimport React, { Component } from \"react\";\nimport { DataTable, Pagination, TableToolbarAction, TableToolbarMenu } from \"carbon-components-react\";\nconst {\n  TableContainer,\n  Table,\n  TableHead,\n  TableRow,\n  TableBody,\n  TableCell,\n  TableHeader,\n  TableToolbar,\n  TableToolbarContent,\n  TableSelectRow,\n  TableSelectAll,\n  TableToolbarSearch,\n  TableBatchActions,\n  TableBatchAction\n} = DataTable;\nlet userData = [];\nconst headers = [{\n  key: \"FirstName\",\n  header: \"First Name\"\n}, {\n  key: \"LastName\",\n  header: \"Last Name\"\n}, {\n  key: \"id\",\n  header: \"ID\"\n}, {\n  key: \"Address\",\n  header: \"Address\"\n}, {\n  key: \"Country\",\n  header: \"Country\"\n}];\nconst menus = [{\n  \"name\": \"Save\",\n  \"id\": \"id001\"\n}, {\n  \"name\": \"Copy\",\n  \"id\": \"id002\"\n}, {\n  \"name\": \"Delete\",\n  \"id\": \"id003\"\n}];\n\nclass CustomTable extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleOnInputValueChange = event => {\n      if (event.target.value) {\n        let filteredPlans = userData.filter(obj => {\n          let match = false;\n          Object.values(obj).forEach(value => {\n            if (!match) {\n              if (value && value.toString().toLowerCase().includes(event.target.value.toLowerCase())) match = true;\n            }\n          });\n          return match;\n        });\n        console.log(\"filtered plans size\", filteredPlans.length);\n        this.setState({\n          userData: filteredPlans\n        });\n      } else {\n        this.setState({\n          userData\n        });\n      }\n    };\n\n    this.state = {\n      userData: props.rows,\n      menus: menus,\n      startRow: 0,\n      endRow: 5\n    };\n  }\n\n  handleMenuChange(event, menuItem, selRows) {\n    let eventData = event;\n    console.log(eventData);\n    console.log(\"Clicked: \" + menuItem.name + \" -- \" + event + \" -- selected rows: \" + selRows[0].id);\n  }\n\n  handlePageChange(e) {\n    const startRow = e.pageSize * (e.page - 1); //console.log('startRow: ' + startRow);\n\n    const endRow = e.pageSize * e.page; //console.log('endRow: ' + endRow);\n\n    this.setState({\n      startRow: startRow,\n      endRow: endRow\n    });\n  }\n\n  // <TableBatchActions {...getBatchActionProps()}>\n  //   <TableBatchAction onClick={this.handleMenuChange(selectedRows)}>Edit</TableBatchAction>\n  // </TableBatchActions>\n  render() {\n    console.log(\"plans size\", this.state.userData.length);\n    userData.map(r => console.log(r));\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(DataTable, {\n      rows: this.state.userData,\n      headers: headers,\n      render: ({\n        rows,\n        headers,\n        getHeaderProps,\n        getRowProps,\n        getSelectionProps,\n        getBatchActionProps,\n        onInputChange,\n        selectedRows\n      }) => {\n        return /*#__PURE__*/React.createElement(TableContainer, {\n          title: \"DataTable\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 15\n          }\n        }, /*#__PURE__*/React.createElement(TableToolbar, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(TableToolbarContent, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(TableToolbarSearch, {\n          onChange: this.handleOnInputValueChange,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 21\n          }\n        }), /*#__PURE__*/React.createElement(TableToolbarMenu, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 21\n          }\n        }, this.state.menus.map(menu => /*#__PURE__*/React.createElement(TableToolbarAction, {\n          key: menu.name,\n          onClick: e => this.handleMenuChange(e, menu, selectedRows),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 55\n          }\n        }, menu.name))))), /*#__PURE__*/React.createElement(Table, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(TableHead, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 19\n          }\n        }, /*#__PURE__*/React.createElement(TableRow, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(TableSelectAll, Object.assign({}, getSelectionProps(), {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 23\n          }\n        })), headers.map(header => /*#__PURE__*/React.createElement(TableHeader, Object.assign({}, getHeaderProps({\n          header\n        }), {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 25\n          }\n        }), header.header)))), /*#__PURE__*/React.createElement(TableBody, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 19\n          }\n        }, rows.map((row, i) => /*#__PURE__*/React.createElement(TableRow, {\n          key: row.id,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 23\n          }\n        }, /*#__PURE__*/React.createElement(TableSelectRow, Object.assign({}, getSelectionProps({\n          row\n        }), {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 25\n          }\n        })), row.cells.map(cell => /*#__PURE__*/React.createElement(TableCell, {\n          key: cell.id,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 27\n          }\n        }, cell.value)))))), /*#__PURE__*/React.createElement(Pagination, {\n          totalItems: this.state.userData.length,\n          pageSize: 3,\n          pageSizes: [3, 6, 9],\n          onChange: e => this.handlePageChange(e),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 17\n          }\n        }));\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nexport default CustomTable;","map":{"version":3,"sources":["/Users/ggopinathpatro/carbonreact/carbonreact/react/src/components/datatables/CustomTable.js"],"names":["React","Component","DataTable","Pagination","TableToolbarAction","TableToolbarMenu","TableContainer","Table","TableHead","TableRow","TableBody","TableCell","TableHeader","TableToolbar","TableToolbarContent","TableSelectRow","TableSelectAll","TableToolbarSearch","TableBatchActions","TableBatchAction","userData","headers","key","header","menus","CustomTable","constructor","props","handleOnInputValueChange","event","target","value","filteredPlans","filter","obj","match","Object","values","forEach","toString","toLowerCase","includes","console","log","length","setState","state","rows","startRow","endRow","handleMenuChange","menuItem","selRows","eventData","name","id","handlePageChange","e","pageSize","page","render","map","r","getHeaderProps","getRowProps","getSelectionProps","getBatchActionProps","onInputChange","selectedRows","menu","row","i","cells","cell"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { DataTable, Pagination, TableToolbarAction, TableToolbarMenu } from \"carbon-components-react\";\n\nconst {\n  TableContainer,\n  Table,\n  TableHead,\n  TableRow,\n  TableBody,\n  TableCell,\n  TableHeader,\n  TableToolbar,\n  TableToolbarContent,\n  TableSelectRow,\n  TableSelectAll,\n  TableToolbarSearch,\n  TableBatchActions,\n  TableBatchAction\n} = DataTable;\n\nlet userData = [];\nconst headers = [\n  {\n    key: \"FirstName\",\n    header: \"First Name\"\n  },\n  {\n    key: \"LastName\",\n    header: \"Last Name\"\n  },\n  {\n    key: \"id\",\n    header: \"ID\"\n  },\n  {\n    key: \"Address\",\n    header: \"Address\"\n  },\n  {\n    key: \"Country\",\n    header: \"Country\"\n  }\n];\n\nconst menus = [\n  { \"name\": \"Save\",\n    \"id\" : \"id001\"\n  }, { \"name\": \"Copy\",\n        \"id\" : \"id002\"\n  }, { \n    \"name\":\"Delete\",\n    \"id\" : \"id003\"\n  }];\n\nclass CustomTable extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      userData: props.rows,\n      menus: menus,\n      startRow: 0,\n      endRow: 5\n    };\n  }\n  \n  handleMenuChange(event, menuItem, selRows) {\n    let eventData = event;\n    console.log(eventData);\n      console.log(\"Clicked: \" + menuItem.name + \" -- \" + event + \" -- selected rows: \" + selRows[0].id);\n  }\n  handlePageChange(e) {\n    const startRow = e.pageSize * (e.page - 1);\n    //console.log('startRow: ' + startRow);\n\n    const endRow = e.pageSize * e.page;\n    //console.log('endRow: ' + endRow);\n\n    this.setState({ startRow: startRow, endRow: endRow });\n  }\n\n  handleOnInputValueChange = event => {\n    if (event.target.value) {\n      let filteredPlans = userData.filter(obj => {\n        let match = false;\n        Object.values(obj).forEach(value => {\n          if (!match) {\n            if (value &&\n              value\n                .toString()\n                .toLowerCase()\n                .includes(event.target.value.toLowerCase())\n            )\n              match = true;\n          }\n        });\n\n        return match;\n      });\n\n      console.log(\"filtered plans size\", filteredPlans.length);\n      this.setState({ userData: filteredPlans });\n    } else {\n      this.setState({ userData });\n    }\n  };\n// <TableBatchActions {...getBatchActionProps()}>\n//   <TableBatchAction onClick={this.handleMenuChange(selectedRows)}>Edit</TableBatchAction>\n// </TableBatchActions>\n  render() {\n    console.log(\"plans size\", this.state.userData.length);\n    userData.map(r => console.log(r));\n    return (\n      <div>\n        <DataTable\n          rows={this.state.userData}\n          headers={headers}\n          render={({\n            rows,\n            headers,\n            getHeaderProps,\n            getRowProps,\n            getSelectionProps,\n            getBatchActionProps,\n            onInputChange,\n            selectedRows,\n\n          }) => {\n            return (\n              <TableContainer title=\"DataTable\">\n              \n                <TableToolbar>\n                  \n                <TableToolbarContent>\n                    <TableToolbarSearch\n                      onChange={this.handleOnInputValueChange}\n                    />\n                    <TableToolbarMenu>\n                    {\n                        this.state.menus.map(menu => (<TableToolbarAction key={menu.name} onClick={(e) => this.handleMenuChange(e ,menu, selectedRows)}>{menu.name}</TableToolbarAction>))\n                    }\n                    </TableToolbarMenu>\n                    \n                </TableToolbarContent>\n                  \n                </TableToolbar>\n                \n                <Table>\n                  <TableHead>\n                    <TableRow>\n                      <TableSelectAll {...getSelectionProps()} />\n                      {headers.map(header => (\n                        <TableHeader {...getHeaderProps({ header })}>\n                          {header.header}\n                        </TableHeader>\n                      ))}\n                    </TableRow>\n                  </TableHead>\n                  <TableBody>\n                    {rows.map((row, i) => (\n                      \n                      <TableRow key={row.id}>\n                        <TableSelectRow {...getSelectionProps({ row })} />\n                        {row.cells.map(cell => (\n                          <TableCell key={cell.id}>{cell.value}</TableCell>\n                        ))}\n                      </TableRow>\n                    ))}\n                  </TableBody>\n                </Table>\n                <Pagination\n                  totalItems={this.state.userData.length}\n                  pageSize={3}\n                  pageSizes={[3, 6, 9]}\n                  onChange={e => this.handlePageChange(e)}\n                />\n              </TableContainer>\n            );\n          }}\n        />\n      </div>\n    );\n  }\n}\n\nexport default CustomTable;\n"]},"metadata":{},"sourceType":"module"}