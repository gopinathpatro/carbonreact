{"ast":null,"code":"var _jsxFileName = \"/Users/ggopinathpatro/Downloads/HMCReactive/carbon-react/carbon-react/src/components/datatables/HMCTable.js\";\nimport React from 'react';\nimport { DataTable } from 'carbon-components-react';\nconst {\n  Table,\n  TableRow,\n  TableHead,\n  TableExpandHeader,\n  TableExpandRow,\n  TableExpandedRow,\n  TableContainer,\n  TableHeader,\n  TableBody,\n  TableCell\n} = DataTable;\nlet rows, headers;\n\nclass HMCTable extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.rows = [{\n      id: 'a',\n      foo: 'Foo a',\n      bar: 'Bar a',\n      baz: 'Baz a'\n    }, {\n      id: 'b',\n      foo: 'Foo b',\n      bar: 'Bar b',\n      baz: 'Baz b'\n    }, {\n      id: 'c',\n      foo: 'Foo c',\n      bar: 'Bar c',\n      baz: 'Baz c'\n    }];\n    this.headers = [{\n      key: 'foo',\n      header: 'Foo'\n    }, {\n      key: 'bar',\n      header: 'Bar'\n    }, {\n      key: 'baz',\n      header: 'Baz'\n    }];\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(DataTable, {\n      rows: initialRows,\n      headers: headers,\n      render: ({\n        rows,\n        headers,\n        getHeaderProps\n      }) => /*#__PURE__*/React.createElement(TableContainer, {\n        title: \"DataTable with sorting\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 5\n        }\n      }, /*#__PURE__*/React.createElement(Table, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(TableHead, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(TableRow, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }\n      }, headers.map(header => /*#__PURE__*/React.createElement(TableHeader, Object.assign({\n        key: header.key\n      }, getHeaderProps({\n        header\n      }), {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 15\n        }\n      }), header.header)))), /*#__PURE__*/React.createElement(TableBody, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 9\n        }\n      }, rows.map(row => /*#__PURE__*/React.createElement(TableRow, {\n        key: row.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }\n      }, row.cells.map(cell => /*#__PURE__*/React.createElement(TableCell, {\n        key: cell.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 17\n        }\n      }, cell.value))))))),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 5\n      }\n    });\n  }\n\n}\n\nexport default HMCTable;","map":{"version":3,"sources":["/Users/ggopinathpatro/Downloads/HMCReactive/carbon-react/carbon-react/src/components/datatables/HMCTable.js"],"names":["React","DataTable","Table","TableRow","TableHead","TableExpandHeader","TableExpandRow","TableExpandedRow","TableContainer","TableHeader","TableBody","TableCell","rows","headers","HMCTable","Component","id","foo","bar","baz","key","header","render","initialRows","getHeaderProps","map","row","cells","cell","value"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { DataTable } from 'carbon-components-react';\n\nconst { Table,TableRow, TableHead,TableExpandHeader, TableExpandRow, TableExpandedRow,TableContainer, TableHeader, TableBody, TableCell } = DataTable;\nlet rows, headers;\n\nclass HMCTable extends React.Component {\n\nrows = [\n  {\n    id: 'a',\n    foo: 'Foo a',\n    bar: 'Bar a',\n    baz: 'Baz a',\n  },\n  {\n    id: 'b',\n    foo: 'Foo b',\n    bar: 'Bar b',\n    baz: 'Baz b',\n  },\n  {\n    id: 'c',\n    foo: 'Foo c',\n    bar: 'Bar c',\n    baz: 'Baz c',\n  },\n];\n\n// We would have a headers array like the following\nheaders = [\n  {\n    key: 'foo',\n    header: 'Foo',\n  },\n  {\n    key: 'bar',\n    header: 'Bar',\n  },\n  {\n    key: 'baz',\n    header: 'Baz',\n  },\n];\n\n  render() {\n  return (\n    <DataTable\n  rows={initialRows}\n  headers={headers}\n  render={({ rows, headers, getHeaderProps }) => (\n    <TableContainer title=\"DataTable with sorting\">\n      <Table>\n        <TableHead>\n          <TableRow>\n            {headers.map((header) => (\n              <TableHeader key={header.key} {...getHeaderProps({ header })}>\n                {header.header}\n              </TableHeader>\n            ))}\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {rows.map((row) => (\n            <TableRow key={row.id}>\n              {row.cells.map((cell) => (\n                <TableCell key={cell.id}>{cell.value}</TableCell>\n              ))}\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  )}\n/>\n  );\n}\n}\n\nexport default HMCTable;\n"]},"metadata":{},"sourceType":"module"}